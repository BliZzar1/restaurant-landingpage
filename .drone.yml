---
kind: pipeline
type: docker
name: hugo-website-ci

# --- Variables & Secrets ---
env: &env
  ENV: dev
  PROD_BASE_URL: http://restaurant-vbucket.s3-website-us-east-1.amazonaws.com/
  STAGING_BASE_URL: http://staging-restaurant-vbucket.s3-website-us-east-1.amazonaws.com
  RELEASE_S3_BUCKET: s3://release-restaurant-vbucket
  AWS_SESSION_TOKEN:
    from_secret: aws_session_token
  AWS_ACCESS_KEY_ID:
    from_secret: aws_access_key_id
  AWS_SECRET_ACCESS_KEY:
    from_secret: aws_secret_access_key

# --- Déclencheurs (Triggers) ---
# Cette pipeline se déclenchera uniquement sur les pushs vers la branche 'main'.
trigger:
  event:
    - push

# --- Étapes de la Pipeline (Steps) ---
steps:
  # Étape 1 : Build du site statique Hugo
  - name: hugo-build
    image: peaceiris/hugo:v0.124.1 # Utilisation d'une version plus récente et populaire
    pull: if-not-exists
    environment:
      <<: *env
    commands:
      # Génère le site statique dans le dossier 'public'
      - hugo --minify --baseURL $PROD_BASE_URL
    when:
      event:
        - push
      branch: 
        - main
        - master

  - name: package-and-deploy-release
    image: amazon/aws-cli:latest
    pull: if-not-exists
    environment:
      <<: *env
    commands:
      # 1. Créer un nom de version unique basé sur les 8 premiers caractères du hash du commit.
      - export RELEASE_VERSION=$(echo $DRONE_COMMIT_SHA | cut -c 1-8) # <-- Changement ici
      - export ARCHIVE_NAME="hugo-build-${RELEASE_VERSION}.tar.gz"
      - echo "Préparation de l'archive : ${ARCHIVE_NAME}"

      # 2. Créer l'archive tar.gz du contenu du dossier 'public'.
      - tar -czf ${ARCHIVE_NAME} -C ./public .

      # 3. Téléverser l'archive unique vers le bucket S3 de release.
      - echo "Téléversement de l'archive vers s3://${RELEASE_S3_BUCKET}/"
      - aws s3 cp ${ARCHIVE_NAME} s3://${RELEASE_S3_BUCKET}/
    when:
      event:
        - push
      branch: 
        - main
        - master